<snippet>
	<content><![CDATA[
import React from 'react'
import PropTypes from 'prop-types'
import {
	compose,
	withState,
	withHandlers,
	lifecycle,
} from 'recompose'

import {
	loadingWrapperHOC,
} from 'common_components'

export const Enhancer = compose(
    withState('model', 'setModel', undefined),
	withHandlers({
		handleChange: ({onChange, setValue, name}) => (data) => {
			setValue(data)
			onChange({value: data.toString('html'), name})
		}
	}),
	lifecycle({
		componentDidMount() {
			this.props.setModel(this.props.value)
		}
	}),
	loadingWrapperHOC((props) => props.model === undefined),
)

export const Component = ({
	model,
}) =>
	<div>
		test default
	</div>

Component.propTypes = {
	model: PropTypes.object,
}

export const Enhanced = Enhancer(Component)

export default Enhanced

]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>recompose</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
